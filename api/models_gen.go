// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package api

import (
	"time"
)

type DomainUsers struct {
	Sid      string     `json:"sid"`
	Username string     `json:"username"`
	Name     string     `json:"name"`
	Groups   [][]string `json:"groups"`
}

type FilesBoolExp struct {
	_and       []*FilesBoolExp       `json:"_and"`
	_not       *FilesBoolExp         `json:"_not"`
	_or        []*FilesBoolExp       `json:"_or"`
	FileID     *IntegerComparisonExp `json:"file_id"`
	Filename   *TextComparisonExp    `json:"filename"`
	RevisionID *IntegerComparisonExp `json:"revision_id"`
}

type FilesInsertInput struct {
	Data       *string `json:"data"`
	FileID     *int    `json:"file_id"`
	Filename   *string `json:"filename"`
	RevisionID *int    `json:"revision_id"`
}

type FilesMutationResponse struct {
	AffectedRows int     `json:"affected_rows"`
	Returning    []Files `json:"returning"`
}

type IntegerComparisonExp struct {
	_eq     *int   `json:"_eq"`
	_gt     *int   `json:"_gt"`
	_gte    *int   `json:"_gte"`
	_in     []*int `json:"_in"`
	_isNull *bool  `json:"_is_null"`
	_lt     *int   `json:"_lt"`
	_lte    *int   `json:"_lte"`
	_neq    *int   `json:"_neq"`
	_nin    []*int `json:"_nin"`
}

type Revisions struct {
	RevisionID int       `json:"revision_id"`
	Started    time.Time `json:"started"`
	Completed  time.Time `json:"completed"`
}

type TextComparisonExp struct {
	_eq       *string   `json:"_eq"`
	_gt       *string   `json:"_gt"`
	_gte      *string   `json:"_gte"`
	_ilike    *string   `json:"_ilike"`
	_in       []*string `json:"_in"`
	_isNull   *bool     `json:"_is_null"`
	_like     *string   `json:"_like"`
	_lt       *string   `json:"_lt"`
	_lte      *string   `json:"_lte"`
	_neq      *string   `json:"_neq"`
	_nilike   *string   `json:"_nilike"`
	_nin      []*string `json:"_nin"`
	_nlike    *string   `json:"_nlike"`
	_nsimilar *string   `json:"_nsimilar"`
	_similar  *string   `json:"_similar"`
}
